{{- $fullName := include "simple-app.fullname" . -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "simple-app.fullname" . }}
  labels:
    {{- include "simple-app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "simple-app.selectorLabels" . | nindent 6 }}
  strategy:
    {{- if (include "simple-app.needs-recreate" .) }}
    type: Recreate
    {{- else }}
    type: RollingUpdate
    {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "simple-app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "simple-app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        {{- if .Values.shmSize }}
        - name: shared-memory
          emptyDir:
            medium: Memory
            sizeLimit: {{ .Values.shmSize }}
        {{- end }}
        {{- range .Values.volumes }}
        - name: {{ .name }}
          {{- if .hostPath }}
          hostPath:
            path: {{ .hostPath }}
            type: Directory
          {{- else if .emptyDir }}
          emptyDir:
            sizeLimit: {{ .size }}
          {{- else if .size }}
          persistentVolumeClaim:
            claimName: {{ $fullName }}-{{ .name }}
          {{- else if .configMap }}
          configMap:
            {{- .configMap | toYaml | nindent 12 }}
          {{- else if .secret }}
          secret:
            {{- .secret | toYaml | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- range .Values.configs }}
        - name: configs
          configMap:
            name: {{ $fullName }}
        {{- end }}
      containers:
        - name: {{ include "simple-app.name" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ include "simple-app.image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.command }}
          command:
            {{- .Values.command | toYaml | nindent 12 }}
          {{ end }}
          {{- if default .Values.global.env .Values.env }}
          env:
            {{- default .Values.global.env .Values.env | toYaml | nindent 12 }}
          {{ end }}
          ports:
            - name: http
              containerPort: {{ .Values.port }}
              protocol: TCP
            {{- range .Values.extraPorts }}
            - name: {{ .name }}
              containerPort: {{ .port }}
              protocol: {{ .protocol | default "TCP" }}
            {{- end }}
          livenessProbe:
            {{- if .Values.livenessProbe }}
            {{- toYaml .Values.livenessProbe | nindent 12 }}
            {{- else }}
            httpGet:
              path: {{ .Values.probe.path }}
              port: http
            {{- end }}
          readinessProbe:
            {{- if .Values.readinessProbe }}
            {{- toYaml .Values.readinessProbe | nindent 12 }}
            {{- else }}
            httpGet:
              path: {{ .Values.probe.path }}
              port: http
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.shmSize }}
            - name: shared-memory
              mountPath: /dev/shm
            {{- end }}
            {{- range .Values.volumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
            {{- end }}
            {{- range .Values.configs }}
            - name: configs
              mountPath: {{ if .mountPath }}"{{ .mountPath }}"{{ else }}"/configs/{{ .name }}"{{ end }}
              subPath: {{ .name }}
              readOnly: true
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.spreadServiceAcrossNodes }}
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
          {{- include "simple-app.selectorLabels" . | nindent 12 }}
        maxSkew: 1
        topologyKey: "kubernetes.io/hostname"
        nodeTaintsPolicy: Honor
        whenUnsatisfiable: ScheduleAnyway
      {{- end }}
